version: '3.8'

services:
  database:
    image: postgres:15-alpine
    container_name: censeo_database
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: censeo_dev
      POSTGRES_USER: censeo_user
      POSTGRES_PASSWORD: censeo_dev_password
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U censeo_user -d censeo_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - censeo_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: censeo_backend
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - DATABASE_NAME=censeo_dev
      - DATABASE_USER=censeo_user
      - DATABASE_PASSWORD=censeo_dev_password
      - DATABASE_HOST=database
      - DATABASE_PORT=5432
      - DJANGO_SETTINGS_MODULE=censeo.settings.development
    volumes:
      - ./backend:/app
      - backend_static:/app/static
      - backend_media:/app/media
    depends_on:
      database:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"
    networks:
      - censeo_network
    stdin_open: true
    tty: true

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: censeo_frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - frontend_build:/app/build
    depends_on:
      - backend
    command: npm start
    networks:
      - censeo_network
    stdin_open: true
    tty: true

volumes:
  postgres_data:
    driver: local
  backend_static:
    driver: local
  backend_media:
    driver: local
  frontend_build:
    driver: local

networks:
  censeo_network:
    driver: bridge