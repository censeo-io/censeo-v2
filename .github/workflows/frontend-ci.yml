name: Frontend CI

on:
  push:
    branches: [ main, develop, mvp-dev-environment ]
    paths: [ 'frontend/**' ]
  pull_request:
    branches: [ main, develop ]
    paths: [ 'frontend/**' ]
  workflow_dispatch:

defaults:
  run:
    working-directory: frontend

jobs:
  frontend-quality:
    name: Frontend Code Quality
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Check Prettier formatting
        run: |
          npm run format -- --check
          if [ $? -ne 0 ]; then
            echo "‚ùå Code is not properly formatted"
            echo "üí° Run 'npm run format' to fix formatting issues"
            exit 1
          fi
          echo "‚úÖ Code formatting is correct"

      - name: Run ESLint
        run: |
          npm run lint
          echo "‚úÖ ESLint passed with no issues"

      - name: Run TypeScript type checking
        run: |
          npx tsc --noEmit
          echo "‚úÖ TypeScript compilation successful"

      - name: Run tests with coverage
        run: |
          npm test -- --coverage --watchAll=false --ci
          echo "‚úÖ All tests passed"
        env:
          CI: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: frontend/coverage
          flags: frontend
          name: frontend-coverage
          fail_ci_if_error: false

      - name: Build application
        run: |
          npm run build
          echo "‚úÖ Build completed successfully"
        env:
          CI: true
          GENERATE_SOURCEMAP: false

      - name: Check bundle size
        run: |
          echo "üì¶ Bundle size analysis:"
          du -sh build/
          find build/static/js -name "*.js" -exec du -h {} \; | sort -hr

      - name: Archive build artifacts
        if: matrix.node-version == '20.x'
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend/build/
          retention-days: 7